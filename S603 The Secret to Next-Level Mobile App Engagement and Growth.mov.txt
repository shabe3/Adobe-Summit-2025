00:00:00:01 - 00:00:25:13
不明
Hello everyone! Hope you're having a great time at summit. Welcome to session 603. My name is Pootie Pujari and I'm a software development engineer on the Adobe Experience Platform mobile SDK team. I've been with Adobe for five years, and I work on the SDK libraries that help app developers integrate with AP and its solutions. I'm joined today by my colleague Ryan Morales.

00:00:25:15 - 00:00:49:51
不明
Ryan, would you like to introduce yourself? Sure. So I've been at Adobe for about 14 years now, and I've been on the mobile team for the past eight years, and I've worked on different marketing related features. But lately I've been working on a lot of, in-app and push notification, messaging related features. And, I'm excited to show, this new feature that we just released and I'll be doing a little later.

00:00:49:51 - 00:01:13:46
不明
But for now, I'll hand it back to Squirty. Thanks, Ryan. We're very excited to be here today to share a new way of supercharging your mobile apps engagement and growth using Adobe Journey Optimizer. So we'll start our session with a high level overview of Adobe Journey Optimizer and the communication channels that it provides to interact with your mobile app users.

00:01:13:51 - 00:01:38:21
不明
Then we will introduce to introduce you to the star of today's show content guides, and go over some of the use cases where you can use this channel. Then we will do a live demo of authoring and publishing a content card campaign in the Adobe Journey Optimizer web UI. I'll hand it off to Ryan, who will show all the steps that a mobile app developer needs to do to integrate these cards in an iOS app.

00:01:38:25 - 00:02:01:46
不明
We will end with giving you a sneak peek of what is to come in the future of this channel, and we'll save some time at the end for Q&A. But before we start, we want to get to know our audience here a little bit. So by a show of hands, how many here are familiar with Adobe Experience platform or app, as I'm going to refer to it for the rest of this session.

00:02:01:51 - 00:02:25:07
不明
So if you have used it, ever heard of it? Like if you just raise your hands? Okay. We have a lot of users who are aware of our app or have used it, and how many of you have used at least one product built on top of app? This could be a real time customer data platform, customer Journey Analytics or Adobe Journey Optimizer.

00:02:25:12 - 00:03:00:02
不明
Okay, we have a few hands, so we have a few users in the group. That's good. And last question how many of you have mobile apps that are currently published to either the Apple App Store or the Google Play Store? Okay. Well, that's that's an overwhelming number. So we definitely have the right target audience for this session. And for all those of you who said you have mobile apps life, this graphic might be very familiar where you see a gradual decline in the number of users engaging with your app as time goes by.

00:03:00:07 - 00:03:25:25
不明
I myself have around 100 apps on my phone, but I spend about 75% of my time on just three apps. And spoiler alert, all three are social media apps. So what are these three apps doing right that the others aren't? They are communicating with me constantly on something that I value a lot. Well, in my case, it's the many adorable cat videos that I'm missing out on.

00:03:25:30 - 00:03:50:37
不明
So engaging and retaining users is not just about the functionality that your app offers, but it's also about how often you remind your users the value it brings to them. Regular communication can keep your users engaged, and content personalized to them can reinforce your app's value to them. This is where Adobe Journey Optimizer, or AGL comes into play.

00:03:50:42 - 00:04:22:28
不明
It allows you to create and deliver personalized content across any app, device or communication channel. But to personalize content for each user, you would require a central location for all your customer data and a powerful engine that could leverage insights from the real time customer app engagement. This capability is provided by AP and Ajio. Being an app that is natively built on App is fully equipped to harness these features.

00:04:22:33 - 00:05:00:36
不明
With AB, you can deliver one time content personalized to a specific set of audience on any single communication channel, using campaigns. Or you can craft a multi-step cross-channel workflow combining various user events using journeys. You can even show best offers and experiences tailored to each user at the right moment of their app usage. Using decision management, Ajio can not only boost your user retention through personalization, but also offers many other ways in which you can drive your app's growth.

00:05:00:41 - 00:05:30:06
不明
One way would be to provide highly relevant product recommendations to increase in-app purchases and conversions. Another is to create app workflows tailored to each user to improve engagement. You can even analyze the metrics about your life campaign and tweak them for optimal performance. These amazing improvements can be achieved by leveraging the various channels provided by Jio to engage with your users.

00:05:30:10 - 00:05:57:09
不明
For this presentation, we're going to be focusing on the channels that are available in Jio to communicate with your mobile app users. And the first one of these is push notifications. If you use your phone regularly, you've definitely seen one of these come up. One moment, you are opening your phone to set a reminder and one push notification, and two hours later, you're deep into watching catch vibing to folk music.

00:05:57:14 - 00:06:20:30
不明
This is how powerful push notifications are, because they allow you to communicate with your users even when they're not actively using your app. So it can be a great way to help users who have not used your app in a while to reengage with it. It is also great for time sensitive alerts as it ensures instant communication with your users.

00:06:20:34 - 00:06:51:34
不明
The second way in which you can communicate with your mobile app users through agile is by in-app messages. These are pop ups that overlay on top of your existing app content. It helps in sending notifications within your app for different purposes, like promoting new features, presenting special offers, or onboarding new users or just at the right moment. They have a clear call to action, which can be effective in improving conversions within your app.

00:06:51:39 - 00:07:16:54
不明
The third way in which you can improve your app experience is through code based experiences. They allow you to insert and edit personalized content in locations embedded inside your app. And this channel is not just limited to mobile apps. You can use it across all your touchpoints like web apps, smart TV kiosks, or even surfaces where you don't even have a web browser available.

00:07:16:58 - 00:07:41:58
不明
It also supports API based headless or server side implementations. If you have those requirements. And finally, the newest channel in Angel and the star of today's show content guides. It allows delivering personalized and engaging content directly within your mobile app. You can press and text along with rich media in a way that matches the theme of your app.

00:07:42:03 - 00:08:12:29
不明
And as we will demo later, it is very easy for app developers to integrate it in their existing app, while offering flexibility to completely customize the card as they need to. It allows you to dynamically change the app content without needing those multiple long, tedious app releases. One big advantage of using content cards is that they integrate seamlessly with your app's existing UI, ensuring that users are not overwhelmed by them.

00:08:12:34 - 00:08:40:43
不明
Unlike the push notification and in-app message, channel, content cards offer a persistent, non-intrusive way to enhance the app experience. They can be delivered without requiring any explicit user opt in, and with the help of a mobile SDK. It's also a breeze for developers to integrate it in that app with just a few lines of code, ensuring quick time to market and accelerated value realization.

00:08:40:47 - 00:09:08:46
不明
So what can content cards be used for? Here are, for example, use cases that you can take away from this session and start implementing right away in your apps. But sky's the limit with what you can do with this channel. So the first use case is for product promotion and upsell. And here is an example of how one of our internal customers, Adobe Acrobat, used content cards to drive their in-app conversions.

00:09:08:51 - 00:09:36:50
不明
Their objective was to win back pay users who had canceled their premium subscription in the last one year. So they targeted these users initially with a push and an in-app message. When users failed to convert upon these initial messages, they showed a persistent content card on the app's homepage describing the offer to the user, and also added a call to action that would redirect them to the resubscribe page.

00:09:36:50 - 00:10:06:52
不明
With the offer already applied. This approach of targeting non-active app users with a push notification, combined with showing a persistent homepage content, card heads and effective communication without overwhelming users and proved very effective to increase the in-app conversions. The second use case that we are actually going to be implementing live today is to help new users onboard into your app and discover new features.

00:10:06:57 - 00:10:34:48
不明
So, in continue continuation of using the Adobe Acrobat example from the first use case, we want to create a content card that will help new users discover the free cloud storage feature provided by the app. But to be able to use the Cloud Storage feature, users first need to sign into the app. So, we have already created a content card campaign that is shown to users when they are in the app, but haven't signed in yet.

00:10:34:53 - 00:10:57:58
不明
The call to action on this content card will lead to the Sign in page. Now we will author a content card that will be shown to users after they sign in and explain to them about this cloud storage feature, and even add a call to action that will lead to the specific feature page. So let's jump in and bring this vision to life.

00:10:58:03 - 00:11:25:00
不明
But before I move over to the agile UI, I want to talk about a few prerequisite steps that need to be completed before you start using content cards. The first one is that your organization has access to Adobe Experience Platform and Adobe Journey Optimizer. Once you have these solutions enabled for your own, you will need to create a data set that will hold all of your customer data.

00:11:25:05 - 00:11:43:09
不明
So now you can either use one of the Pre-Provision data sets or create your own. And for some of you who said you are already using a B, you might have this data set, in which case you will need to add a field group to record all the content card interactions that your users are performing in the app.

00:11:43:13 - 00:12:13:23
不明
Then you need to create a data stream that will link your app with this data set. Be sure to enable the Adobe Journey Optimizer option in the data stream for the sake of time. We have already completed the step. The next prerequisite is to ensure that your organization has the right policies enabled for Adobe Experience Platform. And the last step is to implement Adobe Experience Platform Mobile SDK in your app.

00:12:13:28 - 00:12:27:51
不明
And this last step is made really easy with the guided channel setup offered in Azure. So I'm going to take a minute to quickly switch over to my browser.

00:12:27:55 - 00:12:59:22
不明
Now I'm on the homepage of experienced adobe.com, and right next to this account image there's a nine tile. And when I click on it I see the Journey Optimizer option. I'm here on the homepage of Adobe Journey Optimizer. This may look slightly different for you based on what actions you have been taking in this solution before, but if you scroll down, you should be able to see a Get Started section with a card for setting up mobile and web channels.

00:12:59:27 - 00:13:22:57
不明
So I'm going to go ahead and click begin. You need to create a tag data from a tagged property in the data collection UI for your mobile app. So if you already have one, you can select that in the dropdown here. Or you can click new. Let's give a helpful name for this. We'll call it Acrobat Content Card Demo.

00:13:23:02 - 00:13:44:01
不明
And then you can select the data stream that was created in the first step. Now for our demo. Today we are only going to be using the iOS platform. So I'm going to select that and then click on Auto Create Resources. So behind the scene this is supposed to create the tag property for you. But we have already performed this step.

00:13:44:06 - 00:14:10:50
不明
So at the end of it you will have a successful configuration. And you will also see all the instructions that needed to be added in your app's code. So here you see the package dependencies that need to be imported in Xcode, as well as the code that needs to be added in your Appdelegate class. I'll hand it over to Ryan a little bit later, and he will show you exactly where these needs to be placed in the code.

00:14:10:55 - 00:14:35:08
不明
Now, let me go back to the home page of Adobe Journey Optimizer, and the first step in actually creating a content card is to create a channel configuration. So a channel configuration has all the technical parameters needed to deliver your content card. So right here on the left navigation, if you scroll down all the way at the bottom you see this channels option.

00:14:35:13 - 00:15:02:21
不明
Now I will go ahead and create a new channel configuration and first provide a helpful name. So let's call it Acrobat Content Cards. And I want it to show up on the homepage. So I'll call it homepage. Then we'll select the communication channel which is content cards. And you can configure the delivery parameters for all three platforms web, iOS and Android in a single channel configuration.

00:15:02:25 - 00:15:35:15
不明
But for our demo I will just select iOS. Now you need three pieces of information from your app developer. The first one is the app ID, which for iOS apps is the bundle identifier that uniquely identify your app when it's published to App Store. So for our app, it's comm Dot, Adobe Acrobat dot demo. The next one is a location, which is basically a unique string that identifies the location inside your app where the content card needs to be displayed.

00:15:35:20 - 00:16:04:32
不明
I want the cards on the homepage, so I will select homepage. And then finally you can also provide a preview URL, which should be a deep link that opens your app. This preview URL is used to connect to Adobe Assurance, which is a web based UI to debug your app implementation. You can even use it to preview your content cards even before they're published, to ensure that it matches the look and feel of the rest of your app.

00:16:04:37 - 00:16:30:33
不明
So my app, the Deep Link is demo, so I'm going to go ahead and click submit. Now we can finally go and create a campaign for our content card. So on the left navigation I'm going to click campaign. And let's create a content card campaign. Now content card is a inbound channel, meaning that the mobile app requests for the content card on demand from the upstream servers.

00:16:30:37 - 00:16:55:32
不明
So I need to select scheduled marketing and then click create. Let's give a helpful name for our campaign and let's call it Acrobat Sandbox. Okay, so I had to switch the sandbox deliberately. Sorry I was on the wrong sandbox. So let's go ahead and do that again and create campaign.

00:16:55:37 - 00:17:07:45
不明
And then let's give a helpful name to this campaign about cloud storage.

00:17:07:49 - 00:17:31:10
不明
And then select the communication channel which is content cards. Now to control who actually sees this content card. There are two ways that you can configure it. The first one is if you want to show your content card to a specific set of users, you can create an AP audience comprising of these users and select that audience right here.

00:17:31:15 - 00:17:54:15
不明
I want my card to be visible to all my app users, so I leave it at all. Visitors, but I do want the card only to be visible to users after they sign into the app. So for this, I'm going to leverage the additional delivery rules. These rules are client side triggers that allow a content card to get qualified for a user.

00:17:54:19 - 00:18:32:15
不明
When they perform some real time action in the app. So Ryan, who built the app, told me that when a user signs into the app, there is an event sent to Adobe Experience Platform with a specific unique string indicating the signed and status of the user. So I'm going to click Edit Rules and then remove this existing application launch condition and select Send Data to platform, and then add this unique value that Ryan gave me, which is state, and then enter the key which is signed in, and then click done.

00:18:32:20 - 00:19:04:26
不明
So to reiterate the difference between audience and the delivery rules, audience controls which users actually receive your content card from the upstream and delivery rules determine when the user is able to see the cards that they're qualified for. So let me also select the channel configuration that we created. And then finally get to the fun part, which is editing the features that go inside the card with content card.

00:19:04:28 - 00:19:31:09
不明
There are about five fields that you can configure. The first one is a close button, which provides users with the ability to dispense a card if they don't want to see it anymore. I like the simple X button, so I'm going to click on that for the title and the body. I already have determined some text that describe the cloud storage feature.

00:19:31:10 - 00:19:49:59
不明
So I'm just going to paste that in. And then I also want to change an image that I've already uploaded to experienced manager assets. So I have created a folder for the session. And I can find all my assets right here.

00:19:50:04 - 00:20:13:13
不明
Now on the left here you can also see a preview of what the card looks like. And if you toggle this button, you can even see what the card looks like when the app is in dark mode. I don't really like the contrast of this green against the black, so I'm going to go ahead and enable advanced formatting and provide another image that is going to be used.

00:20:13:28 - 00:20:38:51
不明
If your phone is in dark mode. So I like this green better against the dark background, but the image still looks pretty wide. And this is something that the app developer can control on their own. And Ryan will show how when I hand it off to him in a minute. Finally, I also want to add a button that will lead the user to the specific feature page.

00:20:38:56 - 00:21:02:45
不明
So I will call it right now. And then this is the deep link that Ryan shared for the Cloud Storage feature page. Finally, I also want my reports to show when users have clicked on this button. So I'll provide a string that will help me identify interactions with this button in my content card report. So all of this is looking great.

00:21:02:47 - 00:21:09:27
不明
Let's review our campaign.

00:21:09:32 - 00:21:32:40
不明
So the card itself looks great. I want it to be delivered to the Acrobat app on the home page, and I only want it to be shown to users after they've signed in. So I'm going to go ahead and activate this campaign. Now, I've shown you all the steps that a marketer would need to perform on the Ajio web UI to author and publish a content card.

00:21:32:45 - 00:22:06:38
不明
Now, I'll hand it off to Ryan, who will be showing all the steps that an app developer needs to take to integrate these cards in the iOS app. Over to you. Right. All right. Thanks, Martha. Let me switch over to, recitation. Okay. Yeah. So, you know, I want to show, that the steps on integrating these the contact card that they had created on Azure UI into your app and initially, this is just an initialization step for the, APK.

00:22:06:43 - 00:22:29:51
不明
We have we have a list of extensions that I will be showing. And within the app code in Xcode. And we have a, Register extensions API, which you, which you provide this list of extensions to. And we also have a configure with app ID API, which takes the the tag property, which has your app configuration. And this is set up on the data collection UI.

00:22:29:56 - 00:22:57:15
不明
So let me go to next slide. And to retrieve the content cards we have two API that we have added. The first one is update propositions for services. And you provided a list of services, to download the, the cards from HBO. And, we will cache them in memory once they are downloaded. And the second API is, get content cards UI and you provide it once service.

00:22:57:19 - 00:23:21:31
不明
An optional customizer, which can be used to apply any, app customization you want to give to the card to, for example, brand styling or make the card match your app look and feel and a listener, which you can it's optional as well. And that listener lets you apply any custom, custom, actions you want to take when, when the card the card is interacted with.

00:23:21:36 - 00:23:51:18
不明
And finally there's, there's a completion which will return the retrieve contact card from the cache, or an error if an error occurred. When retrieving the content card. So let me go. Next slide. And this is the basic layout of a content card. Currently we support one, UI template named Small Image template. We have plans to support more templates in the future, but currently this is the one we have released.

00:23:51:23 - 00:24:17:47
不明
And, each of these elements, in this content card are swift five use meaning that each of them will can be modified using Swift UI view modifiers. We provide a, custom view modifier protocol to use in modifying these, these fields. So, I will also show that later on, how to use, and yeah.

00:24:17:47 - 00:24:43:54
不明
Let me go to, the Xcode now to, to show the actual implementation, within, the ID let me so, this is X road. And I created an app, written in Swift UI, which I will be integrating the contact card that's expertly created. Into, well into the app itself. And, in this, this is app delegate of the of the application.

00:24:43:58 - 00:25:03:49
不明
And I as you can see, we have the extensions that I had shown in that slide. We have that call to register extensions to register these, necessary extensions to get the app started. And I had that configured with app ID call to, to, configure the app with the tag property that was set up on the data collection UI.

00:25:03:54 - 00:25:34:57
不明
And I can show the API, the API that I talked about, So within the download cards, function here, we have the, the call to update propositions for services, and we're providing it, a list of which contains one surface. So the surface is essentially the bundle ID of the app, plus the location where you want to display the the content card.

00:25:34:57 - 00:25:56:40
不明
So the bundle ID can be retrieved if you go to the project properties right at this, the identity, area, you have the, the bundle ID, which corresponds to the app ID in the Azure UI. So in this case it's contact Adobe Acrobat demo. So if I go back here, so I'm building this surface object.

00:25:56:40 - 00:26:20:30
不明
And if you look at the, all this content is, is just defining the homepage location where the cart, the car should be displayed within the app. Let me return here. And the other API I talked about was, get content cards, UI. And again, it takes a surface ID, optional customizer, an optional listener, and it returns result in a in the completion.

00:26:20:34 - 00:26:43:31
不明
So yeah, like I could go ahead and I'll run through the demo and let me, let me just launch it.

00:26:43:36 - 00:26:52:50
不明
I think there's some kind of network issue. It wasn't able to retrieve the card.

00:26:52:55 - 00:27:11:22
不明
Okay, so so this is actually the, we have a sign in content card, which we had created previously, and this is just telling the user, the app user, that they can sign in to access additional features. So let me go ahead and click that. Click sign in, sign in with my Adobe account.

00:27:11:27 - 00:27:36:14
不明
So from here I have signed in to as a premium user of the app. And I can show, support mentioned that we have a send data to platform event that qualifies a user for for this content card. So if I go to this view here, I create a SSM data dictionary with the key state, status and the value signed in.

00:27:36:28 - 00:27:57:37
不明
And I call edge dot send event to send that experience event out to, to the app. The history of the platform and that will qualify the, the app user using a client side rule to say that they qualify for this content card. So now I have this contact card. That's what I just created ago. And it's displayed within the app.

00:27:57:37 - 00:28:13:33
不明
So one thing I do want to mention is the formatting does look a bit wonky. And with the image taking up half of the, card, the card space, then the text kind of squashed to one side. This is because we delivered the card the cards in a generic fashion to the app, and we want to use the app.

00:28:13:46 - 00:28:35:43
不明
The developer want to use a credit card. The card customizer, to make sure the card matches the look and feel the app. So, I will actually let me just go ahead and click through. Now, this this triangle button has that deeply that will redirect the the app user to the cloud storage feature within the app. So when I hit try now it redirects to this cloud storage feature.

00:28:35:43 - 00:28:59:56
不明
And it's just a way for the app user to, to discover new functionality within the app. So let me, let me, show the card customizer, how the how to use that. So if I go to the features card view. So we have this, card customizer currently commented out, let me just enable it. So now, I believe I will be passing a non nil value to the get contact cards UI.

00:28:59:56 - 00:29:21:03
不明
And it's telling it when you retrieve this card from the cache, please apply this customized, customization to it. So this is a card customizer code. You can see that, you know you could customize the template title, the text color, the font, the template body, the text and find as well. But the main thing I want to point out is within the image modifier.

00:29:21:03 - 00:29:44:04
不明
This will modify the the image that was currently taking up half the size of the content card. And now it will shrink it to a width of 90 and the height of 120. So when I relaunch the app, it should apply that customization to the card. And the card should have a more appealing look that will match the app.

00:29:44:11 - 00:30:03:34
不明
The app's, look at feel better, like with the image kind of taking up less of the mass of the card. The card and the text is much more readable. Now. So yeah, that's about it. Like I showed like, you know, with just a few lines of code, you can, you can implement, sorry, a few lines of code to get the contact card within your app.

00:30:03:34 - 00:30:28:32
不明
And yeah, it's quick and pretty easy. So, let me hand it back the. Thank you. Ryan, let me quickly switch back to the presentation. Okay. So you saw how in just under 15 minutes and with just three simple steps, we were able to create a content card, publish the campaign, and also integrate it with our iOS app.

00:30:28:37 - 00:30:50:26
不明
So to go over our steps again we created a channel configuration. Then we use that channel configuration in a campaign and then design all the features that need to go inside the content card. And then Ryan, who's the app developer, he showed us how easy it is to integrate it into the app with just a few lines of code using the app messaging SDK.

00:30:50:31 - 00:31:20:10
不明
Now let me for a minute, quickly switch back to the agile UI, because I want to show how the reports for these content cards look like. So, we have this content card for the Sign-In card that Ryan here, and we have this running for a while. So let me open the reporting for it. These reports are powered by customer journey analytics, and you can see various metrics for this particular card campaign.

00:31:20:15 - 00:31:45:07
不明
You can see that it has 282 displays, but there have only been 53 clicks on that card. So like the click through rate is about 19%, which is quite low. So I can go back in and modify my campaign to make the card more appealing for users to actually click on. If you scroll down, you can even see other content card campaigns that are targeting this very surface.

00:31:45:12 - 00:32:11:46
不明
We had some that we have. We had activated as we were testing this feature. So you can see four of those campaigns and how they've been performing. And if you want a more live, real time report, you can also find a 24, 24 hour report right here. And this provides a more, real time, statistic about the impressions and interaction on the content card.

00:32:11:51 - 00:32:31:01
不明
And then you might remember that I put in a string, when I was authoring the content card at the button, part. So that string is what showing is what is showing up here. For the sign in card, we are given the identifier of the button, a sign in, and we can see that there were nine interactions in the past 24 hours.

00:32:31:06 - 00:32:57:47
不明
So let me switch back to my presentation. And let's look at two more ways in which you can use content cards to improve your app engagement. The first one would be to have meaningful interactions with your app users to strengthen brand loyalty, and this can be achieved by using content cards to share personalized messages. Celebrating milestone in life events.

00:32:57:52 - 00:33:23:27
不明
You can even show exclusive deals for your Reward Points members and motivate them to move to a higher tier using content cards. And you can even go a step further and improve your app by getting first hand feedback from your app users through ratings and surveys powered by content cards. And then another way in which you can use content cards is to keep your users informed about upcoming payments.

00:33:23:36 - 00:33:56:42
不明
Subscription renewals appoint minutes or bookings. You can even increase in-app conversions by showing users a new product that they were interested in that has just come back in stock. And then finally, you can improve the app's value to the user by guiding them to external resources that can unlock new ways that they can use your app. So we saw everything that is possible with content cards today, but we want to give you a sneak peek of some of the future enhancements that we want to make to this channel.

00:33:56:47 - 00:34:17:13
不明
As Ryan told, we only have one template right now with the image on the left side and then the title text, and the body and buttons on the left side. We know that this does not cover all marketing use cases, so we will. We are working on adding additional template choices to provide more UI options to display these cards.

00:34:17:18 - 00:34:52:52
不明
The second one that we are really excited to be working to, provide in the future is an easy, out of the box container to organize multiple cards that are designed for single surface so you can easily organize your cards either in a vertical list, horizontal, stacked, or grid. Next, we want to provide a dedicated location in your app where your content cards can live in the form of a message inbox, and this can come with some additional functionality like providing user rate status and even allowing users to delete the card permanently.

00:34:52:56 - 00:35:20:16
不明
And then the final feature that we want to bring to the content card channel is to allow automatically pairing it with other transient channels like push and in-app messages. So when a user receives a push notification and they dismiss it, it still lives on in the app in the form of content card. So, as you saw, you can boost your app's engagement by delivering fully customized content and rich media with minimal effort.

00:35:20:16 - 00:35:38:51
不明
Using content cards. If you are ready to get started with this channel, please scan this QR code for some resources. I think that's about it for our session, and we want to open it up for questions. Thank you, thank you for.

